name: CI/CD Pipeline with SonarCloud, Trivy, and ECR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-backend-app
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # SonarCloud Token stored in GitHub Secrets
  #AWS_ROLE: arn:aws:iam::416143650187:role/github-actions-role # Change this to your IAM role

jobs:
  build-and-analyze:
    name: Build, SonarCloud Analysis, and Security Scan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Set Up Go (For Sonar Analysis of JavaScript/TypeScript)
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: 1.22

    - name: Build
      run: go build -o go-web-app

    - name: Test
      run: go test ./...

    - name: Checkout repository
      uses: actions/checkout@v4


    # - name: Set up Node.js
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18'

    # Run SonarCloud Analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.organization=samfajobi513
          -Dsonar.projectKey=SamFajobi513_go-web-app-devopsified
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    

    # - name: Log in to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v2
    #   with:
    #     mask-password: 'true'

    # - name: Build Docker Image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     COMMIT_SHA: ${{ github.sha }}
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA .
    #     docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA $ECR_REGISTRY/$ECR_REPOSITORY:latest

    # - name: Run Trivy Security Scan  
    #   uses: aquasecurity/trivy-action@master
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #   with:
    #     image-ref: '${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest'
    #     format: 'table'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'

    # - name: Push Docker Image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     COMMIT_SHA: ${{ github.sha }}
    #   run: |
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
